<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalvar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8M1/AVualLjy+iZSAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnVoltar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAqNJREFUOE+d
        jX0s1HEcx792JE95qiRM/qiV0SEPG5slTlqzGir/VG5rIqyitjLXhGaJtG5rwia3RjonNZZ5mKeGRpld
        uHOdh7PDXR7P03l890vfZcpa67V99tk+74cP+Z09mQqXw3wF/2yRUsGtUi9eLB9d9M+WKqwiPvCJd5kL
        tW2P3fOxuIiGmblc5QpK54DSeUDITIkWyBrUwu+JZI64FsVR+1YOlUxyYz7PomCKMY8D6RPAbcXqxmRM
        A9nM5C0AnPyvIK4CLo395Mi7GcfgplnlY9UaeCNriO9fgefL0Wn7tD6hzd0vQnambPqmfBnJ6nWkMw8c
        ohqVhF3gROOEeFRrCmMkWiQMriJatgzH/JFO0/geByoTVlCtw77Y9s7I3iUkqoHTNRPQOy7MoTIhPvWz
        4kjJEqKYL4F1M7BO6w+j0i90fCsCvF4oED24Di5TZBFe20UlQryZglMtcwhqnoWzQA37R8OhVNqCXVJ3
        3wXxMs53LsDqeruYngk5+l7DOSicCD+Qpwqz54+E0PMGFpfb3v7Yun4VbIeHfYtBHVoEts7D7FLjZsG2
        +NeYuaWIWyIrR0ECa8LMz9U/9Swfh0/zPJyF49gRIKqkzj9h+VWzvZK7P93p0cK3cBh21zqkfiKV1rlK
        A6e6BZhGf1wi7oJgat+KfkjbVfdM6Ux4kwaWz8ZwomoKJxs0sHs9BVuRBrtTZdDxKs4iXgJdGtnEKmkg
        1i1XgWMiNQwfDME4WwnDHBUM8tQwzf8GE54ULN+yN8RDsItGtrKXN2C+/768WD9Rvq6TOgTdTCX0MxQw
        YoJG3NaunZyKGyzvVyxq3x5rnkzPNk0eb5gysEKYAoNbvbAMbcgwOVNjQC3/hk2ShGN8TzZpmNANevo/
        LK+0/6WAkO8oZWkjgIcEygAAAABJRU5ErkJggg==
</value>
  </data>
</root>