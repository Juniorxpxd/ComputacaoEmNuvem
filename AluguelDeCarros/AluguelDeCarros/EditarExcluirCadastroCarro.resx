<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVoltar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAEJRJREFUaEO9
        WQlUVVeWjR9QM1QSFUEmJ9QYZ0Rl+qCMAp95FmQQEefgPMUpapxSaiqaqq5UV7pXW1mmKg6MCk6MLgQE
        RGZkcipMLGtZ/atMudLdu/d5/38LA1Ybh75rbd5997137t7nnHvefZ/XnrU9OvL5/M9nzirYO2nyDP3Q
        S2+tySnqP7W1FR+ym5qqH3o57VFSctrd7TtA8oIHr0JE1+Klahz4VPuosgqfu6jx0kT8Z3xi2t8S56Ei
        PtEg4KWL+PMikt++Q4v9B4AvfotTfv4iQDBff8vztbtz4tLux8Xjpq8GJ82t8Jnt6Jcu4i8pqWqsXqfF
        5m3A7n24tzQNZ4fZ4pdjxr6YiPaIqLRbUTFo8fJGZt83UTcnAadMXu8hYs8LiPhb8gL1D4uWaP97xSpg
        42Z8y0hn9f8ZmtZsxEmTN55fRF1IaFpzWARqZ3ko5OvnJKJr989RP29hDxEfU8RHEyb+ZBFaLtiHKana
        R6mL8MPyNNyNjEFWv7dwfeNW3M84jaaV634sIkn/6D9vZf4By6oCg1Du4oYM8Xx0PLp2fYLOBctw99AR
        NHYTQe9j58RJ2DZ+woNN48Y9s4g/JyWr/zJvvvav8xeAInAnIFgh37J+M/50IgN3OM+9r0+gYemKH4uI
        15vovV3wmf1Ooa/fw0IHZx35yDiS34uOpEXoSFmOziUr8e3hf0FjUqoi4tDIUdg+YSI+HDce68a+/2Dl
        mPf+TxFd8QnqewlJWooAReCGrz8ySbKZ5O99fUohf+fnh3F732e4d+w46lOX4SS56EXcJ17Xm+rZznh6
        peXZz/ghgwZrw6JxZ9tutMfOQxvRHp+KjvlL0bl0FboO/AIN8xbhpPHr2D98JDa8Pw6r3xuL5aPHPEi1
        HfVUETdiYtW3YuO1XaxoFIE2b18d+VXr8d3RP+DWnoO4Tdzac0A53vxoD7777VHUpSzBMYo4ohMRoTfX
        s2VMnFybbtz/77Uhkbi9bjNaQ+agNTIerVHxaOMibotNQXvCArTNnUcRh1GfmKKI2DV0ONLGvIfFo0Yh
        ecTIB3HDhvcQ0RwZpW6NjtF2xsSCItDk6Q1xVPOKtfj2347i5q59uLmD2L5HIX5zyy7c2LgdnWu34u6v
        v8SVpBQc6fsGPrUdXaQ3+WT7xsLGKd2o//c1fsG4tXoTWvyCcD0oCtdDotEiRwq4HpWE60yr1thktCUv
        xp1PDnFhpyoiNlvZIGWkLeKHD0e0zdAHIVbW9nrTr9WEhqvrwyO1zZHRoAgWB0+FfMOyFej6zb+jcxOJ
        bt6Bzg93onP9FnQQneu3oXPNh+hYtQGdqzeg67NfoSA+GVuYuntMzcfqTf+jkfwI4lFtYDhuLFuFRldv
        NFFEc0AYmnxD0RJKIdEJaAmbi5aIuWhlCrVxYd/Zfwi1cfNwgiLWWlhiztBhCLW2hsbC8oGnubl9gSZA
        XRkcqqUIUAQq3WbpyC9JQ9evfoMOelnBhm0KOjdsR/uK9WhbthrtaWuItWhfvhp/PHAEZxPmI1Vl8vcV
        KpPBetpPtj8Y9Q/6yqjfoyqmUCcfbPDwR4NPIJr8I9DEKLRExqKFXmiOopCYRLQwEtcTFzJnP0Et00pE
        LDMzR6ClFXyGDMHMwWYP8v012rLAYFAESqWykXz9wqX44y+/QPvqjWhLW4c2roH2VRt14LxtJNy68AO0
        cb21Ll6J2/s/xem4JMxRGT8kPPR0e2+HjfoFHVL1fXRZE4IOGq93n416LwrxD0djcDQaw2PREByFxsi5
        aIpOJBLQHJuIG1t2oDZmriJi/iBTuJuZwcXUFAX+GpQEBKLQ0UUhX5eyCLcPHUbrEiG3Aq1CltVNAc+v
        L1qOlpRluL5gOa4nL8OtfQeQE5f4bOQN7WNV36BdFHGJ6dO2cDlqPWaj1kuD+sAo1PuFoF7DdAiOQGNE
        HBrC5qApJglNc+bhxvbdqKGY4xQR++5AOFPABV8/nJvhiHSSv8YUuPXJL9DM9GtJXUosQTPtN/Fcxprn
        8TxpIVpYtpv5vrm5Zz+y6ZSfRN7QtlPERxRREhyJVobymps3ar01qJsdzGMg6jRhqKPAWk0o6rk+Glit
        GlitOrbuQg0X+nHj/oh+dwBOT52hI88Uu/HxfjSRXBPTrilxARqZgk3Ji9AQm6SgkVWtiSIbmS43du1B
        VlTs85E3tG16EYUBXMSLl+Oqmxeuqj1x1dUH13yDcM0vDDVeAbjmH4q6oAjUMbXqouaiY/NOVIfFKCLS
        WTVqWMHaN3/ELUkC6vlOqZ+bjAZC6cfEo57P1IfPUbYsMtaxdScyud5eiLyhUYRGEcGK1MJwV7l6otrT
        D9WzfFDjQxHeIiREEVTjG4xrjEodS2879zStfJe0bdqGdlkfIi40li9IgkcRWhsSxfFInkfzGZbX0Cjl
        3ky+RF8KeUMziMiXssryV+niQbijytMXV919eaQgDz9UEVcVIYGoYRGQt/m1oHDU+AejJoBHBRG8xshx
        HdWwZNcERerO2W/ldiI9JPzlkjc0g4iLPho0LliCCgc3XHF0xxU3D1SoeXSciUpG5QpR6e6HSpbgapbg
        6tmBqPLxR5UcWc2uMh2v+oegmi9M6RuOLSvX41Rg6Kshb2gUoNlJEQWzA9DIdKpwnIVyEr9s74KyGWqU
        O7ujgil2ZaaXIkYBoyKCKly9dOI8/VHpHYBKRslwlO3ECQp5peQNbS9FHKCIInq0fv5ClNo7o2TSNFxm
        RC7PcEWZsxvKGZEy55ko5Xm58yzlWpnLLFSwkgnKH8MTjdxOHPf2//8hb2jb3n537ZdG/VDq5YfahBSU
        TJmh4NI0Z5JWo9TRjaJmsO/CMSdcFjFObrg03QWl7F+aTtG8VrdwCU74+CHGyOR/5r79ziK9+VfbNk6e
        ok4YNVqbMmiwsomriopDBdNAolA0wR4lUx1RLILsBI4omeaCEnsnlEx31V2zc1DOK1lxymLisMDIBN4D
        BiDA0vL+klGjH28AX0n70tVN/fG06dol3P+HDBuGTW8PwMUJdrg6NwkF70/BxdETUDjODgVE4YSpKJxk
        j8LJ05A/fgqKSLyIwgoncoxia5h+xzge+eZb8DI3R4S1jWzF768Z+/6rEXHBT6M+5u6h/dTRCWv5GbnG
        wkqJQBlLZBHTJm/IcGIYzlrZ4qzlSORZjcRZa1vkKmM81x/PWg4nRqDIkRFh5PYyFeMYzVg6ZJHtKFDA
        fX7lvVwR9WERam7ItKe8vPGFiysO8nv4FMkXMZ/LQiOQS0I5gyxxxnIY+8OVc+mfsRiKPIrIsx6JHFNL
        BTKeZzMK2bxfnj3HtfFrvrFXcCv+wegx2Mjo8jv7/t7JU16OiBtRMepmfoxcCQ5B7mw/HJs4RSFfQA+W
        R0TjtNVwnLYgcSuKMB+G7CFDlfNsM2ue2yDXxpb38BrFZJF09mBr5XrGIDPlnst82V3ggv49be6wGYYt
        4ydgt+4Xj/vEi4loCY9Qt0dGa1sjo1ATEoZz0x2UvU2+A6tJSARymBJZQ6wJG2SaWiFzsBWySTSbouQo
        51nm1sgk8SxzCqA45T6eZ/Ba+iALZPC8hC+wfAe1kpIHR9g+/snmhUTUhoSpG8LCtRSB1ogoVDi7KrvK
        fHr+ErfS2eJlEs0gwQymhhDNoaezOK6Qpfcz6OEMHk8NHIwsEs6g97N4z4mBpkgXAXqcGjQEl7jluMhI
        nNT/ZPNCIq4EBqmrg0O0FMH9fjiq9F9SF+il4sAwEqPH6WEhlyHeF28ztzPp4fTB9C6vy7UsRiiTayLd
        jGPidQpKN+PiJ+F0ESf3iwOIk4PMUcRInOd7o5dfAJ9dRDGrzWVNoJYiQBEoc1LrybOecwKFLD2cSYKZ
        JCPnWZaGc6YLBWRx7BJTrFAqlCYYJcHhyr2SNqdMLRShmRSeIWN8Ru4/yTVxYqAZivjMhecVcc57tlH+
        bL+uIj8NSjUBLI+Oj8kXB4Qgm56SVBDIYpXUkYUo6ZQlHqWnsymklEKPTndCPLcHC1Umj07McEYxhSj3
        kng2I5StpBnPRYAIG2DGKFkodi8xyhd7F1Gtp9p7O+PpPYUiQBE4b6/7kipwckVpUBhy6K3TNJ4juS59
        ei1nsIWuT9I5JCVVR8j/xzTHx3sbwncxRZzk9uESt9iP76cQpU9kkbj0c8wJCpLrcu9Fe8ceIg7aTe39
        FwlpWR6eq86w1ufa2SvkCx3VKCOhM5IWA0xxeuAQ5NJ4LoXI2Gnm8hmmRC77gnIKPTrNocfGLFVl4ruG
        IjIZiXLay6ONM4xeLsmKvTyKEYg9xRb7uYxKBb/yCrm/6i6CAmL1Znu29Fnu2ZmT7JRSWcJqU8Gw59Ho
        eXo9d6A5ztHoOXpdjrnM11wuPMP1Kk72VS/kDW0tRWzhLvY0RVzhd/Q5lk+xc54iLjCdLtApebR5npEQ
        6OayJIcginDCMXI6xDc1Bfyr3uST7XcuaqMT4ydp01mLS+n5anrqPA3mc4JCpks+SUo/n4bzafgcS+EF
        ipL+VS7Sr5nzTyNvaBTgu50iciniKu0rtki2gB4XiC0ddHNcYGrJsTo4jC87Jxwx6S+7gG/15p5sXw8d
        4SnkL7NUyhdTEUNcQIIF9HARDRZzoiJ6rYgGixl25cgx+XT8/TOQNzR+2fnKl91ZirhGETp71jqbJFxE
        m9JXxmROjgmPa/xqy+E8m437/9c+m2E9qlGfb4z6j5bfRi9PdUAdw3aJ6VHGRVXGCcpYXaRfynwXlLNf
        zgkaSOAE385CPkZl7Ek7KrGlR29NucZI+CmfpxTRGBSKcr7NDbZlHrFdbmGjm1vmY7+RUT7OwpKiMnnA
        NWVpsCVGpUlH9ZVRf6/fGfV7WMry2UJy1TRcTS9U0ohyZDQqKUz6cv2UPucjVcbefN6YMBI7enu9NWUe
        wmiT/hu7wMEZ15kiYvMx9PMKKrnm5Po3JM+5HkSpjF3keb2dJwUQRgdV/bz4yfiwmKWwnVWljt64RuI6
        WKCO0ZDxDD35CJWxD58T8j9JAGFsEFHESChzcY3JfHVMIWVeztXKF9vxKdMU8pxLrX/26QIEW1V9vXdQ
        RBFJ3qL6ZnqhkW/KZnrkJj2f/SR5E+K5BAg2qPoGcF08KqEIsd3CFNLBGrckynbTu5M3zPHPBRDG61V9
        fT6kiAJGoosiOpiPXfTSGXvFYHfyLySAMOFcATJXCSuNzNFB8l2BIcjSkdeGq4xdu91v4NhDgAFyQZmE
        Lx/3NJXJQ3krf8etxFm956NVxl5yvRsMz3S387TWYx4B3xP+H3CuAoq4R8/n6Mn/KOd7nUf+yA19CfkH
        2lvE28S7gliVsWauyvj7vKmKwe81KqMgw7VukPvlOXm+HyGe6j6RNDnKuMzzBvEz4h3isR3uncLjOMeZ
        KfYy11/9VEZSHJ42j9gRe0oKyKA5YUtMJpwId0Lquse0PqoPglXGxXZ9VCsNY90wi5D7pxBjCCtiACGT
        dPecCBPCUgLlvqmE5PXjeQQOfVRrOVfh5D6qZd3HCTfCgZhICM8hhNhTlIi6oYRclHzTEPLfwKhngNwn
        988k7IhRhBnxJtE9Z0WQKTGSEPJCSqLZm83eEEbMJiSlhOdwYhChGBfvSHhkp2dNiML3nhHiTSFlQwhx
        8b6kiETWkEZyFDEiQpwl0RaHidjebPYGmWcEIREWnuT72uv/C9YwBMf2ZkoUAAAAAElFTkSuQmCC
</value>
  </data>
</root>